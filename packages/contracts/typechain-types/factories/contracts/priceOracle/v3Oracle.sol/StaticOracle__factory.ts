/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StaticOracle,
  StaticOracleInterface,
} from "../../../../contracts/priceOracle/v3Oracle.sol/StaticOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPancakeV3Factory",
        name: "_PANCAKESWAP_V3_FACTORY",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_CARDINALITY_PER_MINUTE",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CARDINALITY_PER_MINUTE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PANCAKESWAP_V3_FACTORY",
    outputs: [
      {
        internalType: "contract IPancakeV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_feeTier",
        type: "uint24",
      },
    ],
    name: "addNewFeeTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "getAllPoolsForPair",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "isPairSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_cardinality",
        type: "uint16",
      },
    ],
    name: "prepareAllAvailablePoolsWithCardinality",
    outputs: [
      {
        internalType: "address[]",
        name: "_preparedPools",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
    ],
    name: "prepareAllAvailablePoolsWithTimePeriod",
    outputs: [
      {
        internalType: "address[]",
        name: "_preparedPools",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint24[]",
        name: "_feeTiers",
        type: "uint24[]",
      },
      {
        internalType: "uint16",
        name: "_cardinality",
        type: "uint16",
      },
    ],
    name: "prepareSpecificFeeTiersWithCardinality",
    outputs: [
      {
        internalType: "address[]",
        name: "_preparedPools",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint24[]",
        name: "_feeTiers",
        type: "uint24[]",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
    ],
    name: "prepareSpecificFeeTiersWithTimePeriod",
    outputs: [
      {
        internalType: "address[]",
        name: "_preparedPools",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "uint16",
        name: "_cardinality",
        type: "uint16",
      },
    ],
    name: "prepareSpecificPoolsWithCardinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
    ],
    name: "prepareSpecificPoolsWithTimePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_offset",
        type: "uint32",
      },
    ],
    name: "quoteAllAvailablePoolsWithOffsettedTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_queriedPools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
    ],
    name: "quoteAllAvailablePoolsWithTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_queriedPools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "uint24[]",
        name: "_feeTiers",
        type: "uint24[]",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_offset",
        type: "uint32",
      },
    ],
    name: "quoteSpecificFeeTiersWithOffsettedTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_queriedPools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "uint24[]",
        name: "_feeTiers",
        type: "uint24[]",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
    ],
    name: "quoteSpecificFeeTiersWithTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_queriedPools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_offset",
        type: "uint32",
      },
    ],
    name: "quoteSpecificPoolsWithOffsettedTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "_period",
        type: "uint32",
      },
    ],
    name: "quoteSpecificPoolsWithTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedFeeTiers",
    outputs: [
      {
        internalType: "uint24[]",
        name: "",
        type: "uint24[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620025a3380380620025a383398101604081905262000034916200014f565b60609190911b6001600160601b03191660805260f81b7fff000000000000000000000000000000000000000000000000000000000000001660a05260008054600180820183558280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600a8084048201805462ffffff95839006600390810261010090810a888102199093166064909302929092179092558654808601885583810485018054918590068402830a808902199092166101f49092029190911790558654808601885583810485018054918590068402830a808902199092166109c4909202919091179055865494850190965581840490920180549190930690910290930a918202199092166127109091021790556200019b565b6000806040838503121562000162578182fd5b82516001600160a01b038116811462000179578283fd5b602084015190925060ff8116811462000190578182fd5b809150509250929050565b60805160601c60a05160f81c6123ca620001d9600039806107b75280610c015250806103ff5280610725528061085d5280610c8a52506123ca6000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c8063600d4cb5116100a2578063b7604e5311610071578063b7604e5314610251578063bc4389f714610266578063cc6eee381461027b578063d8045eca14610290578063e85dd383146102a357610115565b8063600d4cb5146101f857806362d991191461020b5780636397c9851461021e5780639446994a1461023157610115565b80631c49cbb5116100e95780631c49cbb51461019757806333e4c28e146101aa578063354b1a7d146101bd57806343dfc58d146101d257806355eba792146101e557610115565b80623d4ff51461011a5780630757bc811461014457806307f7ca9f146101575780631b2a933c14610177575b600080fd5b61012d61012836600461212f565b6102b6565b60405161013b929190612396565b60405180910390f35b61012d6101523660046120dc565b6102e3565b61016a610165366004611f6c565b610302565b60405161013b919061238d565b61018a610185366004611e3e565b61031f565b60405161013b91906121ed565b61018a6101a5366004611e80565b61033e565b61018a6101b8366004611d62565b610356565b6101d06101cb366004611f02565b6103d5565b005b6101d06101e0366004612187565b6103e8565b6101d06101f3366004611eb9565b610570565b61012d610206366004611fef565b6105ae565b61018a610219366004611d30565b61062f565b61016a61022c366004611fef565b6106bf565b61024461023f366004611d30565b610710565b60405161013b9190612249565b6102596107b5565b60405161013b91906123af565b61026e6107d9565b60405161013b9190612200565b61028361085b565b60405161013b9190612254565b61012d61029e366004612084565b61087f565b61018a6102b1366004611dd6565b6108a2565b600060606102c786868686016108be565b90506102d78787878488886109c3565b91509550959350505050565b600060606102f58686868660006102b6565b9150915094509492505050565b600061031487878787878760006106bf565b979650505050505050565b606061032b848461062f565b90506103378183610b6b565b9392505050565b606061034e848461018585610bf4565b949350505050565b60606103968686868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610c2f92505050565b805190915083146103c25760405162461bcd60e51b81526004016103b99061230d565b60405180910390fd5b6103cc8183610b6b565b95945050505050565b6103e383836101f384610bf4565b505050565b6040516322afcccb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322afcccb9061043490849060040161237d565b60206040518083038186803b15801561044c57600080fd5b505afa158015610460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104849190611f4b565b60020b6104a35760405162461bcd60e51b81526004016103b990612344565b60005b600054811015610513578162ffffff16600082815481106104c357fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff16141561050b5760405162461bcd60e51b81526004016103b990612268565b6001016104a6565b5060008054600181018255908052600a8082047f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805462ffffff948516600393909406929092026101000a928302939092021916919091179055565b6103e3838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250859250610b6b915050565b600060606105f08888888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610c2f92505050565b805190915085146106135760405162461bcd60e51b81526004016103b99061230d565b6106218989898488886109c3565b915097509795505050505050565b60606106b6838360008054806020026020016040519081016040528092919081815260200182805480156106ac57602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff16815260200190600301906020826002010492830192600103820291508084116106715790505b5050505050610c2f565b90505b92915050565b60006107048888888888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508a92508991506109c39050565b98975050505050505050565b60008054815b818110156107aa5760006107857f000000000000000000000000000000000000000000000000000000000000000061078088886000878154811061075657fe5b90600052602060002090600a91828204019190066003029054906101000a900462ffffff16610d27565b610d7d565b905061079081610e79565b156107a157600193505050506106b9565b50600101610716565b506000949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600080548060200260200160405190810160405280929190818152602001828054801561085157602002820191906000526020600020906000905b82829054906101000a900462ffffff1662ffffff16815260200190600301906020826002010492830192600103820291508084116108165790505b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606061089388888888888860006105ae565b91509150965096945050505050565b60606108b4868686866101b887610bf4565b9695505050505050565b606060006108cc858561062f565b905063ffffffff83166108e0579050610337565b805167ffffffffffffffff811180156108f857600080fd5b50604051908082528060200260200182016040528015610922578160200160208202803683370190505b5091506000805b82518110156109af578463ffffffff1661095584838151811061094857fe5b6020026020010151610e83565b63ffffffff16106109a75782818151811061096c57fe5b602002602001015184838060010194508151811061098657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b600101610929565b506109ba8382611052565b50509392505050565b6000808451116109e55760405162461bcd60e51b81526004016103b99061229f565b63ffffffff821615806109fe575060008363ffffffff16115b610a1a5760405162461bcd60e51b81526004016103b9906122c9565b6000845167ffffffffffffffff81118015610a3457600080fd5b50604051908082528060200260200182016040528015610a6e57816020015b610a5b611c5c565b815260200190600190039081610a535790505b50905060005b8551811015610b1c5760008563ffffffff1611610aac57610aa7868281518110610a9a57fe5b6020026020010151611068565b610aca565b610aca868281518110610abb57fe5b60200260200101518686611391565b838381518110610ad657fe5b6020026020010151600001848481518110610aed57fe5b6020908102919091018101516001600160801b03909316920191909152600291820b90910b9052600101610a74565b5060008151600114610b3657610b31826116c8565b610b50565b81600081518110610b4357fe5b6020026020010151600001515b9050610b5e818a8a8a611784565b9998505050505050505050565b60005b82518110156103e357828181518110610b8357fe5b60200260200101516001600160a01b03166332148f67836040518263ffffffff1660e01b8152600401610bb6919061236e565b600060405180830381600087803b158015610bd057600080fd5b505af1158015610be4573d6000803e3d6000fd5b505060019092019150610b6e9050565b6000603c63ffffffff60ff7f000000000000000000000000000000000000000000000000000000000000000016840216046001019050919050565b6060815167ffffffffffffffff81118015610c4957600080fd5b50604051908082528060200260200182016040528015610c73578160200160208202803683370190505b5090506000805b8351811015610d14576000610cc77f00000000000000000000000000000000000000000000000000000000000000006107808989898781518110610cba57fe5b6020026020010151610d27565b9050610cd281610e79565b15610d0b5780848480600101955081518110610cea57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101610c7a565b50610d1f8282611052565b509392505050565b610d2f611c73565b826001600160a01b0316846001600160a01b03161115610d4d579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610610da557600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527f6ce8eb472fa82df5469c6ab6d485f17c3ad13c8cd7af59b3d4a8026c5ce0f7e260d5808301919091528251808303909101815260f5909101909152805191012090565b803b15155b919050565b6000806000836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610ec157600080fd5b505afa158015610ed5573d6000803e3d6000fd5b505050506040513d60e0811015610eeb57600080fd5b506040810151606090910151909250905061ffff8116610f37576040805162461bcd60e51b81526020600482015260026024820152614e4960f01b604482015290519081900360640190fd5b600080856001600160a01b031663252c09d78461ffff168660010161ffff1681610f5d57fe5b066040518263ffffffff1660e01b8152600401808261ffff16815260200191505060806040518083038186803b158015610f9657600080fd5b505afa158015610faa573d6000803e3d6000fd5b505050506040513d6080811015610fc057600080fd5b50805160609091015190925090508061104757856001600160a01b031663252c09d760006040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b15801561101857600080fd5b505afa15801561102c573d6000803e3d6000fd5b505050506040513d608081101561104257600080fd5b505191505b504203949350505050565b808251141561106057611064565b8082525b5050565b6000806000806000856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156110a957600080fd5b505afa1580156110bd573d6000803e3d6000fd5b505050506040513d60e08110156110d357600080fd5b50602081015160408201516060909201519094509092509050600161ffff82161161112b576040805162461bcd60e51b81526020600482015260036024820152624e454f60e81b604482015290519081900360640190fd5b6000806000886001600160a01b031663252c09d7866040518263ffffffff1660e01b8152600401808261ffff16815260200191505060806040518083038186803b15801561117857600080fd5b505afa15801561118c573d6000803e3d6000fd5b505050506040513d60808110156111a257600080fd5b508051602082015160409092015190945090925090504263ffffffff908116908416146112405785896001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b15801561120357600080fd5b505afa158015611217573d6000803e3d6000fd5b505050506040513d602081101561122d57600080fd5b5051909850965061138c95505050505050565b60008461ffff1660018661ffff168861ffff1601038161125c57fe5b0690506000806000808d6001600160a01b031663252c09d7866040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b1580156112a957600080fd5b505afa1580156112bd573d6000803e3d6000fd5b505050506040513d60808110156112d357600080fd5b508051602082015160408301516060909301519196509450909250905080611328576040805162461bcd60e51b81526020600482015260036024820152624f4e4960e81b604482015290519081900360640190fd5b83880363ffffffff811684890360060b8161133f57fe5b059b506000640100000000600160c01b0384890360201b1663ffffffff83166001600160a01b03026001600160c01b03168161137757fe5b9d9f50909c049c505050505050505050505050505b915091565b604080516002808252606082018352600092839283929091602083019080368337019050509050838501816000815181106113c857fe5b602002602001019063ffffffff16908163ffffffff168152505083816001815181106113f057fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b81526004810182815283516024830152835160009384936001600160a01b038c169363883bdbfd9388939192839260449091019185820191028083838b5b8381101561146557818101518382015260200161144d565b505050509050019250505060006040518083038186803b15801561148857600080fd5b505afa15801561149c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156114c557600080fd5b81019080805160405193929190846401000000008211156114e557600080fd5b9083019060208201858111156114fa57600080fd5b825186602082028301116401000000008211171561151757600080fd5b82525081516020918201928201910280838360005b8381101561154457818101518382015260200161152c565b505050509050016040526020018051604051939291908464010000000082111561156d57600080fd5b90830190602082018581111561158257600080fd5b825186602082028301116401000000008211171561159f57600080fd5b82525081516020918201928201910280838360005b838110156115cc5781810151838201526020016115b4565b50505050905001604052505050915091506000826000815181106115ec57fe5b60200260200101518360018151811061160157fe5b602002602001015103905060008260008151811061161b57fe5b60200260200101518360018151811061163057fe5b60200260200101510390508863ffffffff168260060b8161164d57fe5b05965060008260060b12801561167757508863ffffffff168260060b8161167057fe5b0760060b15155b1561168457600019909601955b63ffffffff89166001600160a01b0302640100000000600160c01b03602083901b166001600160c01b038216816116b757fe5b049650505050505050935093915050565b6000806000805b845181101561174b578481815181106116e457fe5b6020026020010151602001516001600160801b031685828151811061170557fe5b60200260200101516000015160020b028301925084818151811061172557fe5b6020026020010151602001516001600160801b03168201915080806001019150506116cf565b5080828161175557fe5b059250600082128015611770575080828161176c57fe5b0715155b1561177d57600019909201915b5050919050565b6000806117908661187b565b90506001600160801b036001600160a01b038216116117ff576001600160a01b03808216800290848116908616106117df576117da600160c01b876001600160801b031683611bad565b6117f7565b6117f781876001600160801b0316600160c01b611bad565b925050611872565b600061181e6001600160a01b0383168068010000000000000000611bad565b9050836001600160a01b0316856001600160a01b03161061185657611851600160801b876001600160801b031683611bad565b61186e565b61186e81876001600160801b0316600160801b611bad565b9250505b50949350505050565b60008060008360020b12611892578260020b61189a565b8260020b6000035b9050620d89e88111156118d8576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166118ec57600160801b6118fe565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611932576ffff97272373d413259a46990580e213a0260801c5b6004821615611951576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611970576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561198f576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156119ae576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156119cd576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156119ec576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611a0c576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611a2c576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611a4c576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611a6c576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611a8c576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611aac576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611acc576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611aec576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611b0d576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611b2d576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611b4c576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611b69576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611b84578060001981611b8057fe5b0490505b640100000000810615611b98576001611b9b565b60005b60ff16602082901c0192505050919050565b6000808060001985870986860292508281109083900303905080611be35760008411611bd857600080fd5b508290049050610337565b808411611bef57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b80356001600160a01b0381168114610e7e57600080fd5b60008083601f840112611cbb578182fd5b50813567ffffffffffffffff811115611cd2578182fd5b6020830191508360208083028501011115611cec57600080fd5b9250929050565b80356001600160801b0381168114610e7e57600080fd5b803561ffff81168114610e7e57600080fd5b803563ffffffff81168114610e7e57600080fd5b60008060408385031215611d42578182fd5b611d4b83611c93565b9150611d5960208401611c93565b90509250929050565b600080600080600060808688031215611d79578081fd5b611d8286611c93565b9450611d9060208701611c93565b9350604086013567ffffffffffffffff811115611dab578182fd5b611db788828901611caa565b9094509250611dca905060608701611d0a565b90509295509295909350565b600080600080600060808688031215611ded578081fd5b611df686611c93565b9450611e0460208701611c93565b9350604086013567ffffffffffffffff811115611e1f578182fd5b611e2b88828901611caa565b9094509250611dca905060608701611d1c565b600080600060608486031215611e52578283fd5b611e5b84611c93565b9250611e6960208501611c93565b9150611e7760408501611d0a565b90509250925092565b600080600060608486031215611e94578283fd5b611e9d84611c93565b9250611eab60208501611c93565b9150611e7760408501611d1c565b600080600060408486031215611ecd578283fd5b833567ffffffffffffffff811115611ee3578384fd5b611eef86828701611caa565b9094509250611e77905060208501611d0a565b600080600060408486031215611f16578283fd5b833567ffffffffffffffff811115611f2c578384fd5b611f3886828701611caa565b9094509250611e77905060208501611d1c565b600060208284031215611f5c578081fd5b81518060020b8114610337578182fd5b60008060008060008060a08789031215611f84578081fd5b611f8d87611cf3565b9550611f9b60208801611c93565b9450611fa960408801611c93565b9350606087013567ffffffffffffffff811115611fc4578182fd5b611fd089828a01611caa565b9094509250611fe3905060808801611d1c565b90509295509295509295565b600080600080600080600060c0888a031215612009578081fd5b61201288611cf3565b965061202060208901611c93565b955061202e60408901611c93565b9450606088013567ffffffffffffffff811115612049578182fd5b6120558a828b01611caa565b9095509350612068905060808901611d1c565b915061207660a08901611d1c565b905092959891949750929550565b60008060008060008060a0878903121561209c578384fd5b6120a587611cf3565b95506120b360208801611c93565b94506120c160408801611c93565b9350606087013567ffffffffffffffff811115611fc4578283fd5b600080600080608085870312156120f1578182fd5b6120fa85611cf3565b935061210860208601611c93565b925061211660408601611c93565b915061212460608601611d1c565b905092959194509250565b600080600080600060a08688031215612146578283fd5b61214f86611cf3565b945061215d60208701611c93565b935061216b60408701611c93565b925061217960608701611d1c565b9150611dca60808701611d1c565b600060208284031215612198578081fd5b813562ffffff81168114610337578182fd5b6000815180845260208085019450808401835b838110156121e25781516001600160a01b0316875295820195908201906001016121bd565b509495945050505050565b6000602082526106b660208301846121aa565b6020808252825182820181905260009190848201906040850190845b8181101561223d57835162ffffff168352928401929184019160010161221c565b50909695505050505050565b901515815260200190565b6001600160a01b0391909116815260200190565b60208082526016908201527f5469657220616c726561647920737570706f7274656400000000000000000000604082015260600190565b60208082526010908201526f4e6f20646566696e656420706f6f6c7360801b604082015260600190565b60208082526024908201527f43616e6e6f7420717565727920616e206f66667365747465642073706f742071604082015263756f746560e01b606082015260800190565b6020808252601d908201527f476976656e207469657220646f6573206e6f74206861766520706f6f6c000000604082015260600190565b60208082526010908201526f24b73b30b634b2103332b2903a34b2b960811b604082015260600190565b61ffff91909116815260200190565b62ffffff91909116815260200190565b90815260200190565b60008382526040602083015261034e60408301846121aa565b60ff9190911681526020019056fea164736f6c6343000706000a";

type StaticOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticOracle__factory extends ContractFactory {
  constructor(...args: StaticOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _PANCAKESWAP_V3_FACTORY: PromiseOrValue<string>,
    _CARDINALITY_PER_MINUTE: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StaticOracle> {
    return super.deploy(
      _PANCAKESWAP_V3_FACTORY,
      _CARDINALITY_PER_MINUTE,
      overrides || {}
    ) as Promise<StaticOracle>;
  }
  override getDeployTransaction(
    _PANCAKESWAP_V3_FACTORY: PromiseOrValue<string>,
    _CARDINALITY_PER_MINUTE: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _PANCAKESWAP_V3_FACTORY,
      _CARDINALITY_PER_MINUTE,
      overrides || {}
    );
  }
  override attach(address: string): StaticOracle {
    return super.attach(address) as StaticOracle;
  }
  override connect(signer: Signer): StaticOracle__factory {
    return super.connect(signer) as StaticOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticOracleInterface {
    return new utils.Interface(_abi) as StaticOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StaticOracle {
    return new Contract(address, _abi, signerOrProvider) as StaticOracle;
  }
}
