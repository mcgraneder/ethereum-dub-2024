/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SmartWalletTypedHash,
  SmartWalletTypedHashInterface,
} from "../../../../contracts/libraries/SmartWalletHashes.sol/SmartWalletTypedHash";

const _abi = [
  {
    inputs: [],
    name: "HASHED_NAME",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HASHED_VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ECDSA_WALLET_EXEC_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_DETAILS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_SINGLE_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_USER_OPS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576102d39081610020823930815050f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816309b4686114610222575080631c7dc79e146101ed57806334fe6a651461014657806364d4c819146101115780636e4f2775146100dc57806398cf3322146100a75763c5df4f031461006f57600080fd5b816003193601126100a357602090517ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d08152f35b5080fd5b50816003193601126100a357602090517f8de9c86fbdd52e2efe5d4e29fd947a8389e0d8945fed5eef2d0dff9745e601c78152f35b50816003193601126100a357602090517f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b36788152f35b50816003193601126100a357602090517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152f35b50816003193601126100a3578051918183019083821067ffffffffffffffff8311176101c057508152600b82527f454344534157616c6c6574000000000000000000000000000000000000000000602092830152517fa493ff226186ed9712809d71f428d7f274876a4f2b9236f1762ec84b059ae32b8152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b50816003193601126100a357602090517f7d0d3574d627b191e65da04b8c414491138cbc1ad09a37a9c2571881cde7a8b68152f35b82848060031936011261029a578183019083821067ffffffffffffffff8311176101c057508152600582527f302e302e31000000000000000000000000000000000000000000000000000000602092830152517fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118858152f35b80fdfea26469706673582212203005107fcfa0d18bf5a1aed0aba95ccd015b43e70596cbd6d6efe8c4f242098264736f6c63430008110033";

type SmartWalletTypedHashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartWalletTypedHashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartWalletTypedHash__factory extends ContractFactory {
  constructor(...args: SmartWalletTypedHashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SmartWalletTypedHash> {
    return super.deploy(overrides || {}) as Promise<SmartWalletTypedHash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SmartWalletTypedHash {
    return super.attach(address) as SmartWalletTypedHash;
  }
  override connect(signer: Signer): SmartWalletTypedHash__factory {
    return super.connect(signer) as SmartWalletTypedHash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartWalletTypedHashInterface {
    return new utils.Interface(_abi) as SmartWalletTypedHashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartWalletTypedHash {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SmartWalletTypedHash;
  }
}
