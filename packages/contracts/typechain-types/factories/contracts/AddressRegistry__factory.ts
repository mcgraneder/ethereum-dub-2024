/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AddressRegistry,
  AddressRegistryInterface,
} from "../../contracts/AddressRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "AddressRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57600060015561028890816100218239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630a874df614610186575080634420e486146100b157806361b8ce8c1461008e5763edf26d9b1461004f57600080fd5b3461008a57602036600319011261008a578160209373ffffffffffffffffffffffffffffffffffffffff923581528085522054169051908152f35b8280fd5b5050346100ad57816003193601126100ad576020906001549051908152f35b5080fd5b503461008a57602036600319011261008a5780359173ffffffffffffffffffffffffffffffffffffffff8316809303610182576001549160018301908184116101565750600155818452602084815281852080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168517905590519182527f9d0aab85a8d5d90dd2d4f2b885fbe746cadc7ca058b26e5bf46acd9cb692eb3491a280f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b905082843461024f57602036600319011261024f578173ffffffffffffffffffffffffffffffffffffffff9185358152806020522054169182156101ce576020838351908152f35b806020857f08c379a00000000000000000000000000000000000000000000000000000000060849452820152602260248201527f4164647265737352656769737472793a2041646472657373206e6f7420666f7560448201527f6e640000000000000000000000000000000000000000000000000000000000006064820152fd5b80fdfea2646970667358221220c4cc97e91893eadb5946422e5a7359298c165622c4e17abdd1fff56e99c73c9e64736f6c63430008110033";

type AddressRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressRegistry__factory extends ContractFactory {
  constructor(...args: AddressRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressRegistry> {
    return super.deploy(overrides || {}) as Promise<AddressRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressRegistry {
    return super.attach(address) as AddressRegistry;
  }
  override connect(signer: Signer): AddressRegistry__factory {
    return super.connect(signer) as AddressRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressRegistryInterface {
    return new utils.Interface(_abi) as AddressRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressRegistry {
    return new Contract(address, _abi, signerOrProvider) as AddressRegistry;
  }
}
