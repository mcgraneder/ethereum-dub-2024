/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ECDSAWalletVerifier,
  ECDSAWalletVerifierInterface,
} from "../../contracts/ECDSAWalletVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "message",
        type: "uint256",
      },
    ],
    name: "CreateProof",
    outputs: [
      {
        internalType: "uint256",
        name: "pubkeyX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubkeyY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "out_e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "out_s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret_key",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "PrivDerive",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "PubDerive",
    outputs: [
      {
        internalType: "uint256",
        name: "pubkeyX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubkeyY",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "my_secret",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "their_public",
        type: "uint256[2]",
      },
    ],
    name: "SharedSecret",
    outputs: [
      {
        internalType: "uint256",
        name: "xPX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xPY",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "message",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "VerifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
    ],
    name: "deriveAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msghash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "priv",
        type: "bytes32",
      },
    ],
    name: "deterministicGenerateK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint160",
                    name: "amount",
                    type: "uint160",
                  },
                  {
                    internalType: "uint48",
                    name: "expiration",
                    type: "uint48",
                  },
                  {
                    internalType: "uint48",
                    name: "nonce",
                    type: "uint48",
                  },
                ],
                internalType: "struct IWallet.AllowanceOpDetails[]",
                name: "details",
                type: "tuple[]",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "sigDeadline",
                type: "uint256",
              },
            ],
            internalType: "struct IWallet.AllowanceOp",
            name: "allowanceOp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IWallet.UserOp[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IWallet.UserOp[]",
            name: "bridgeOps",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bridgeChainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sigChainID",
            type: "uint256",
          },
        ],
        internalType: "struct IWallet.ECDSAExec",
        name: "operation",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "generateMessagePoint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "hmacSha256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Secp256k1.Point",
        name: "publicKey",
        type: "tuple",
      },
    ],
    name: "publicKeyToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msghash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "recover",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Secp256k1.Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msghash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "privkey",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint160",
                    name: "amount",
                    type: "uint160",
                  },
                  {
                    internalType: "uint48",
                    name: "expiration",
                    type: "uint48",
                  },
                  {
                    internalType: "uint48",
                    name: "nonce",
                    type: "uint48",
                  },
                ],
                internalType: "struct IWallet.AllowanceOpDetails[]",
                name: "details",
                type: "tuple[]",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "sigDeadline",
                type: "uint256",
              },
            ],
            internalType: "struct IWallet.AllowanceOp",
            name: "allowanceOp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IWallet.UserOp[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IWallet.UserOp[]",
            name: "bridgeOps",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bridgeChainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sigChainID",
            type: "uint256",
          },
        ],
        internalType: "struct IWallet.ECDSAExec",
        name: "operation",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "privateKey",
        type: "bytes32",
      },
    ],
    name: "signCrossChainTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "pubkeyX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubkeyY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "out_e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "out_s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657612072908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816307be7925146109a357816312def0a6146109525781633dd4b683146109365781635f68893f146108b75781637ef42d7b146107ab57816386f576351461068757816393378e75146105bf578163934b8ac91461030557816395e80631146102b55781639870e2a414610288578163a7501723146101c9578163d66c90fe14610138578163e03d92d3146100ee575063e113acc8146100bd57600080fd5b346100ea5760209070014551231950b75fc4402da1732fc9bebe196100e1366109c0565b90925192088152f35b5080fd5b8284346101355781600319360112610135576024359067ffffffffffffffff8211610135575060209261012761012e9236908301610aa6565b9035611483565b9051908152f35b80fd5b9050823461013557606036600319011261013557366043121561013557825190610161826109db565b8160649136831161013557506024905b8282106101b9578561019861018f8787602081519101519135611a6c565b92909192611ef1565b906401000003d0198281818195099082828851970986520990096020820152f35b8135815260209182019101610171565b90508234610135576060366003190112610135575061022760206101ec36610d80565b6102056101fa6044356119c2565b949194929092611ef1565b916401000003d019908180858009918183885197099009950992015190611c99565b90916102338284611d55565b15610245575082519182526020820152f35b606490602085519162461bcd60e51b8352820152600c60248201527f6e6f74206f6e20637572766500000000000000000000000000000000000000006044820152fd5b5050346100ea57816003193601126100ea576020905170014551231950b75fc4402da1732fc9bebe198152f35b5050346100ea57806003193601126100ea576020906001600160a01b036102db36610d80565b838151910151835190858201928352848201528381526102fa81610a29565b519020169051908152f35b839150346100ea5760803660031901126100ea5760249182359060ff8216820361013557845192604435610338856109db565b828552826020809601528015600117156105ad576401000003d0199361036a8560078187818088800988090808611f8a565b906001808316911614610591575b8751610383816109db565b7f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817988152868101907f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b882528951916103d9836109db565b84835288830193845270014551231950b75fc4402da1732fc9bebe199188873506830392831161057f5793610449959361042161043c94610432946104449851905191611a6c565b949193909251905190606435611a6c565b949192909361162c565b939092611dba565b611ad2565b90939196885197610459896109db565b885286880194855282878a5161046e816109db565b8281520152811515868382610574575b50508061056c575b1561052b57859383919060019086855b6104cd5750505050505081808280098097510995099051098184516104ba816109db565b8481520190815283519283525190820152f35b9091929496506104e08782979597610f43565b93898486098a03908a8211610519578a6105099392610503920894988096610dc1565b90610f63565b9384938997969493929193610496565b8688601186634e487b7160e01b835252fd5b83600e606492898c519362461bcd60e51b85528401528201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001610486565b14159050868b61047e565b8a88601189634e487b7160e01b835252fd5b840384811115610378578684601185634e487b7160e01b835252fd5b8583601184634e487b7160e01b835252fd5b828434610135576080366003190112610135578235906001600160a01b0382168203610135576024359067ffffffffffffffff8211610135575061067d607461061060209661065d94369101610bcd565b855190610632826106248a82019384611031565b03601f198101845283610a45565b8651948592898401976bffffffffffffffffffffffff199060601b1688525180926034850190610f70565b810160443560348201526064356054820152036054810184520182610a45565b5190209051908152f35b828434610135576001916106c19161069e366109c0565b909160ff6106ac8385611141565b936106b6856119c2565b999199989098611ef1565b916401000003d0199586916106ff6106e184808880099e8f90099a611dba565b9170014551231950b75fc4402da1732fc9bebe1980948c0990610dea565b900998817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffe179b8c8c106000146107a45786885b1695099009161816601b019560ff8711610791578511610765575b50506060945060ff8251941684526020840152820152f35b909193820391821161077e57506060945091858061074d565b80601187634e487b7160e01b6024945252fd5b60248260118a634e487b7160e01b835252fd5b8685610732565b8284346101355760a0366003190112610135576107c736610d80565b90608435916401000003d019806107ee6107e482606435066119c2565b9391929093611ef1565b92818480099061081687519861080b60208a019a8b51908d611a6c565b999199939093611ef1565b92818085800980950990098503908582116108a4575060209c509284610855969381838180966108999d9a61088b9f9d9a069a09970990099209611c99565b9390915194519487519485938a8501976044359389939160a0959391855260208501526040840152606083015260808201520190565b03601f198101835282610a45565b519020149051908152f35b8060118f634e487b7160e01b6024945252fd5b82843461013557816003193601126101355782359067ffffffffffffffff821161013557506108ef6109329361090e92369101610bcd565b82516109038161088b602082019485611031565b519020602435610df7565b93519283526020830191909152604082015260608101919091529081906080820190565b0390f35b5050346100ea5760209061012e61094c366109c0565b90611141565b828434610135578160031936011261013557506001600160a01b036020928383519161097d836109db565b35918281526024359182910152835190858201928352848201528381526102fa81610a29565b5050346100ea576109329061090e6109ba366109c0565b90610df7565b60409060031901126109d6576004359060243590565b600080fd5b6040810190811067ffffffffffffffff8211176109f757604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176109f757604052565b6060810190811067ffffffffffffffff8211176109f757604052565b90601f8019910116810190811067ffffffffffffffff8211176109f757604052565b67ffffffffffffffff81116109f75760051b60200190565b35906001600160a01b03821682036109d657565b359065ffffffffffff821682036109d657565b81601f820112156109d65780359067ffffffffffffffff82116109f75760405192610adb601f8401601f191660200185610a45565b828452602083830101116109d657816000926020809301838601378301015290565b9080601f830112156109d6578135610b1481610a67565b92604091610b2483519586610a45565b808552602093848087019260051b840101938185116109d657858401925b858410610b53575050505050505090565b67ffffffffffffffff84358181116109d657860191608080601f1985880301126109d657845190610b8382610a0d565b610b8e8b8601610a7f565b8252858501358b83015260609081860135878401528501359384116109d657610bbe878c80979681970101610aa6565b90820152815201930192610b42565b9190916101009081818503126109d65760409384519283019167ffffffffffffffff92848110848211176109f757849682358581116109d657830160609283828703126109d6576101608801818110888211176109f757835281358781116109d65782019186601f840112156109d657823592610c4984610a67565b90610c5686519283610a45565b848252602094858084019160071b830101918a83116109d6579086889594939201905b828210610d0e575050508352610c90848201610a7f565b6101208b015201356101408901528752808401358681116109d65785610cb7918601610afd565b90870152808301359485116109d657610cd660e0959486958501610afd565b90860152610ce5818301610a7f565b908501526080810135608085015260a081013560a085015260c081013560c08501520135910152565b9091929394506080828c03126109d657875190610d2a82610a0d565b610d3383610a7f565b825287830135906001600160a01b03821682036109d657828992836080950152610d5e8b8601610a93565b8b820152610d6d8c8601610a93565b8c82015281520191018794939291610c79565b80602312156109d65760405190610d96826109db565b8160449182116109d6576004905b828210610db15750505090565b8135815260209182019101610da4565b81810292918115918404141715610dd457565b634e487b7160e01b600052601160045260246000fd5b91908201809211610dd457565b6401000003d019928392610f059070014551231950b75fc4402da1732fc9bebe1985610e32610e27828806611b38565b999199929092611ef1565b9881808b800980920999099009958097610efa610ec361088b610eaf8460405160208101908a82528d604082015260408152610e6d81610a29565b519020066000908060801c80610f37575b508060401c80610f2a575b508060201c80610f1d575b508060101c80610f10575b5060081c610f08575b4290610dc1565b96610ebb858906611b38565b949094611ef1565b968d87808a8009604051998a98818360208c019e0990099409918952602089015260408801526060870152608086015260a0850190565b519020809509610dea565b90565b600101610ea8565b6002915091019038610e9f565b6004915091019038610e94565b6008915091019038610e89565b91505060109038610e7e565b8115610f4d570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211610dd457565b60005b838110610f835750506000910152565b8181015183820152602001610f73565b90815180825260208092019182818360051b85019501936000915b848310610fbe5750505050505090565b909192939495848082846001940386528951906001600160a01b0382511681528282015183820152604080830151908201526060809201519160808091830152825180918301526110178160a094868686019101610f70565b601f01601f19160101980196959491909101920190610fae565b602091828252805190610100918285850152610180840194815190606096876101208801528251809152816101a0880193019060005b8181106110f65750505060e09392916110b36110c79260406001600160a01b03958683820151166101408c015201516101608a015285015191601f1992838a83030160408b0152610f93565b906040850151908883030189890152610f93565b95820151166080850152608081015160a085015260a081015160c085015260c081015182850152015191015290565b90919383608060019287516001600160a01b038082511683528482015116848301528d65ffffffffffff916040838183015116908501520151168d8201520195019101919091611067565b91909160409081516020908181017f01010101010101010101010101010101010101010101010101010101010101019182825260009081878201528860418201528560618201526061815260a081019067ffffffffffffffff938183108584111761143957838791848b526111b585610a29565b8a85528a3660c0860137815b83811061141d57508a516111d481610a29565b8b8152838101918c368437835b8d81106113e157508c51956111f587610a29565b8d87528d8688019881368b37865b82811061139957505061125c94936112409361124c93899351958693611231868601998a9251928391610f70565b84019151809386840190610f70565b01038084520182610a45565b8c51928392839251928391610f70565b8101039060025afa1561138f576112b2869284926112a28b855192815193849161128e8a840197889251928391610f70565b820190898201520387810184520182610a45565b8a51928392839251928391610f70565b8101039060025afa15611384576112de815193875190868201528581526112d8816109db565b84611483565b9486519886868b01527f0100000000000000000000000000000000000000000000000000000000000000888b015260418a015260618901526061885260a0880191888310908311176113705750610f0595966113599261133f928752611483565b9284519083820152828152611353816109db565b83611483565b92519281840152825261136b826109db565b611483565b80634e487b7160e01b602492526041600452fd5b8551903d90823e3d90fd5b87513d84823e3d90fd5b9150929496506113d391939550601760fa1b6001600160f81b03196113be838661145c565b5116188a1a6113cd828a61145c565b5361144d565b918d8c9694928a9694611203565b90929450611412919350601b60f91b6001600160f81b0319611403838a61145c565b511618881a6113cd828661145c565b9189939187936111e1565b90925061143091811a6113cd828761145c565b879185916111c1565b602484634e487b7160e01b81526041600452fd5b6000198114610dd45760010190565b90815181101561146d570160200190565b634e487b7160e01b600052603260045260246000fd5b60409182519061149282610a29565b83825260209284368585013760005b848110611616575050828451916114b783610a29565b858352818301908636833760005b8781106115de57508651936114d985610a29565b878552838501958836883760005b8981106115a25750509161153791611527856000958b5193849161151384840197889251928391610f70565b820161124082518093868085019101610f70565b8851928392839251928391610f70565b8101039060025afa15611597576000916115799161156986855192815193849161128e8a840197889251928391610f70565b8551928392839251928391610f70565b8101039060025afa1561158d575060005190565b513d6000823e3d90fd5b83513d6000823e3d90fd5b819293949550601760fa1b6001600160f81b03196115c3836115d39561145c565b51161860001a6113cd828961145c565b9087949392916114e7565b61160d91929350601b60f91b6001600160f81b03196115fd838961145c565b51161860001a6113cd828761145c565b908592916114c5565b8082611627921a6113cd828761145c565b6114a1565b9092959391948115806117f9575b6117ef578615806117e7575b6117dd5760409283519461165986610a0d565b60803687376401000003d0199586898009928382528760208301948b0984528780808088800995818b87019a888c528160608901998c0989528c519b61169e8d610a0d565b51900996878b525190099c8d9460208a019e8f52519009918888019583875251900990606087019382855214918215926117d2575b50501561178f578451916116e683610a0d565b60803684375184518703878111610dd45787910882525188518603868111610dd4578691089360208201948086528683518181800993850193808552099160608401928084528803888111610dd45788808851845190096002098903898111610dd457898094928184819509080896519551905190099885870391878311610dd45787915190519009860390868211610dd457869485809492819351989c089009089509900990565b6064855162461bcd60e51b815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b1415905038806116d3565b5091945050929190565b508215611646565b9194509092915050565b50831561163a565b93918415806119ba575b6119b1578015806119a9575b6119a157604080519561182987610a0d565b60803688376001875260208701926001845282880196600188526060890192600184528451986118588a610a0d565b6401000003d0198098818094819451900996878d525190099360208b019b858d5251900991858a01968388525190099060608901938285521491821592611996575b505015611953578151926118ad84610a0d565b60803685375186518503858111610dd45785910883525186518403848111610dd4578491089460208301958087528484518181800994860194808652099260608501938085528603868111610dd45786808551845190096002098703878111610dd457878094928184819509080897519251905190099686850392858411610dd45785915190519009840392848411610dd4578492836001819351099798089009089190565b6064825162461bcd60e51b815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b14159050388061189a565b509150600190565b508315611817565b93506001919050565b50811561180b565b7f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798917f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b86001928015611a67576000948592918590805b611a255750505050929190565b60018116611a49575b90611a3e9160011c938493611bdd565b909391929091611a18565b939083838298611a3e9a611a5c9561162c565b909750959093611a2e565b509190565b919290926001928015611a67576000948592918590805b611a905750505050929190565b60018116611ab4575b90611aa99160011c938493611bdd565b909391929091611a83565b939083838298611aa99a611ac79561162c565b909750959093611a99565b939190938015611a6757929060009182956001918683975b611af8575050505050929190565b838116611b1a575b90611b0f91841c948593611bdd565b909491929091611aea565b949084838299611b0f9b611b2d9561162c565b909850969094611b00565b7f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798917f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b86001928015611a67576000948592918590805b611b9b5750505050929190565b60018116611bbf575b90611bb49160011c938493611bdd565b909391929091611b8e565b939083838298611bb49a611bd29561162c565b909750959093611ba4565b9290918015610f05576401000003d01990818480098282800990838080838a096004099781808080600097800987099280096003090890848880088503858111611c85578590818480090880860391868311611c71578681819209600809860393868511611c5d5750859493919285809481939b08900908940960020990565b80634e487b7160e01b602492526011600452fd5b602485634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526011600452fd5b92939291808303611d3f57506401000003d01980948208611cc05750509050600090600090565b8381800993806000818080808a890960040996800960030908818480088203828111610dd457829081838009089586830390838211610dd4578381819209600809830391838311610dd45783809281806001611d26990960020997089009089391611ef1565b926401000003d019809281808780098092099509900990565b611d269491611d4d93611801565b909390611ef1565b80158015611daa575b8015611da2575b8015611d92575b611d8b576007906401000003d019918282818181950909089180091490565b5050600090565b506401000003d019821015611d6c565b508115611d65565b506401000003d019811015611d5e565b80151580611ed5575b80611ecd575b15611e895760009081600170014551231950b75fc4402da1732fc9bebe19835b611df4575050505090565b611e02848296949596610f43565b9270014551231950b75fc4402da1732fc9bebe1983850970014551231950b75fc4402da1732fc9bebe19039070014551231950b75fc4402da1732fc9bebe198211611e755770014551231950b75fc4402da1732fc9bebe19611e6d9392610503920893968095610dc1565b929183611de9565b602486634e487b7160e01b81526011600452fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001611dc9565b5070014551231950b75fc4402da1732fc9bebe19811415611dc3565b80151580611f7a575b80611f72575b15611e89576000908160016401000003d019835b611f1f575050505090565b611f2e84829693949596610f43565b916401000003d0198484096401000003d019036401000003d0198111611e7557611f699291610503916401000003d019910894968094610dc1565b92919083611f14565b506001611f00565b506401000003d019811415611efa565b801561203657600190817f800000000000000000000000000000000000000000000000000000000000000091825b611fc25750505090565b9091926401000003d01990818080807f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffff0c94818a87161515890a918009098189891c86161515880a91800909818860021c85161515870a91800909918660031c161515840a918009099260041c919082611fb8565b5060009056fea2646970667358221220ce0d0799b38ff2545cfad6f21f2d45d01eeea12b3c09072044bef74820ea8d1b64736f6c63430008110033";

type ECDSAWalletVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECDSAWalletVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECDSAWalletVerifier__factory extends ContractFactory {
  constructor(...args: ECDSAWalletVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ECDSAWalletVerifier> {
    return super.deploy(overrides || {}) as Promise<ECDSAWalletVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ECDSAWalletVerifier {
    return super.attach(address) as ECDSAWalletVerifier;
  }
  override connect(signer: Signer): ECDSAWalletVerifier__factory {
    return super.connect(signer) as ECDSAWalletVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAWalletVerifierInterface {
    return new utils.Interface(_abi) as ECDSAWalletVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECDSAWalletVerifier {
    return new Contract(address, _abi, signerOrProvider) as ECDSAWalletVerifier;
  }
}
