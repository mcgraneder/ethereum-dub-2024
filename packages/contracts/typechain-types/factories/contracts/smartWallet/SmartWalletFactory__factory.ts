/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SmartWalletFactory,
  SmartWalletFactoryInterface,
} from "../../../contracts/smartWallet/SmartWalletFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "_callID",
        type: "bytes32",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_call",
        type: "bytes",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "contract IWallet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_call",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610db2908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c8063d1e64ad71461026b5763eebc8e191461003657600080fd5b80600319360112610267576100496103d9565b91602480359467ffffffffffffffff958681116102635761006d9036908501610471565b9434156101fc57855196602097888801209687845283895286842080549060001982146101ea5760018201905587518a8101918a8352898201528881526100b381610401565b5190209287519261042c80850191858310908311176101d857918493916100de9361052586396104db565b039083f580156101cc5773ffffffffffffffffffffffffffffffffffffffff1694857fc71ce9687e4bf252667e23b2b1cb9433c5357a590c7f9ff6db754257a0be60c18380a38080808034895af1903d156101c6573d9061013e82610455565b9161014b87519384610433565b8252873d92013e5b1561016057505051908152f35b60239085608494519362461bcd60e51b85528401528201527f536d61727457616c6c65743a204661696c656420746f206372656174696f6e2060448201527f46656500000000000000000000000000000000000000000000000000000000006064820152fd5b50610153565b508351903d90823e3d90fd5b878760418b634e487b7160e01b835252fd5b868660118a634e487b7160e01b835252fd5b50506020608493519262461bcd60e51b8452830152808201527f75736572206e6565647320746f2066756e642077616c6c6574206f6e2063726560448201527f61746f6e000000000000000000000000000000000000000000000000000000006064820152fd5b5080fd5b8280fd5b5082346103d65760603660031901126103d6576102866103d9565b9167ffffffffffffffff91602435838111610263576102a89036908701610471565b9182519461034161034d60208098818801208551828101918252604435878201528681526102d581610401565b5190209661042c9461030d61031b8851936102f2868a0186610433565b888552858501986109518a39895192839187830195866104db565b03601f198101835282610433565b8751958693610332868601998a92519283916104b8565b840191518093868401906104b8565b01038084520182610433565b51902091815192868401947fff0000000000000000000000000000000000000000000000000000000000000086523060601b602186015260358501526055840152605583526080830194838610908611176103c3575083905251902073ffffffffffffffffffffffffffffffffffffffff168152f35b80604188634e487b7160e01b6024945252fd5b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103fc57565b600080fd5b6060810190811067ffffffffffffffff82111761041d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761041d57604052565b67ffffffffffffffff811161041d57601f01601f191660200190565b81601f820112156103fc5780359061048882610455565b926104966040519485610433565b828452602083830101116103fc57816000926020809301838601378301015290565b60005b8381106104cb5750506000910152565b81810151838201526020016104bb565b909173ffffffffffffffffffffffffffffffffffffffff6060931682526040602083015261051881518092816040860152602086860191016104b8565b601f01601f191601019056fe60406080815261042c908138038061001681610218565b93843982019181818403126102135780516001600160a01b038116808203610213576020838101516001600160401b0394919391858211610213570186601f820112156102135780519061007161006c83610253565b610218565b918083528583019886828401011161021357888661008f930161026e565b813b156101b9577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916841790556000927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28051158015906101b2575b61010b575b855160e790816103458239f35b855194606086019081118682101761019e578697849283926101889952602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d15610194573d9061017a61006c83610253565b91825281943d92013e610291565b508038808080806100fe565b5060609250610291565b634e487b7160e01b84526041600452602484fd5b50826100f9565b855162461bcd60e51b815260048101859052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761023d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161023d57601f01601f191660200190565b60005b8381106102815750506000910152565b8181015183820152602001610271565b919290156102f357508151156102a5575090565b3b156102ae5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103065750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610336815180928160248601526020868601910161026e565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220f08ce7dd14103bc23c9fba4a6ee08a9026888781d077b452ca4c90a9829b994564736f6c6343000811003360406080815261042c908138038061001681610218565b93843982019181818403126102135780516001600160a01b038116808203610213576020838101516001600160401b0394919391858211610213570186601f820112156102135780519061007161006c83610253565b610218565b918083528583019886828401011161021357888661008f930161026e565b813b156101b9577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916841790556000927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28051158015906101b2575b61010b575b855160e790816103458239f35b855194606086019081118682101761019e578697849283926101889952602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d15610194573d9061017a61006c83610253565b91825281943d92013e610291565b508038808080806100fe565b5060609250610291565b634e487b7160e01b84526041600452602484fd5b50826100f9565b855162461bcd60e51b815260048101859052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761023d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161023d57601f01601f191660200190565b60005b8381106102815750506000910152565b8181015183820152602001610271565b919290156102f357508151156102a5575090565b3b156102ae5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103065750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610336815180928160248601526020868601910161026e565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220f08ce7dd14103bc23c9fba4a6ee08a9026888781d077b452ca4c90a9829b994564736f6c63430008110033a2646970667358221220cc8bc33b47bd43ef7bad57bc641a57a1ab80e236629432f5e37d9f83e14072a864736f6c63430008110033";

type SmartWalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartWalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartWalletFactory__factory extends ContractFactory {
  constructor(...args: SmartWalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SmartWalletFactory> {
    return super.deploy(overrides || {}) as Promise<SmartWalletFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SmartWalletFactory {
    return super.attach(address) as SmartWalletFactory;
  }
  override connect(signer: Signer): SmartWalletFactory__factory {
    return super.connect(signer) as SmartWalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartWalletFactoryInterface {
    return new utils.Interface(_abi) as SmartWalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartWalletFactory {
    return new Contract(address, _abi, signerOrProvider) as SmartWalletFactory;
  }
}
