/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AllowanceTransfer,
  AllowanceTransferInterface,
} from "../../../contracts/permit2/AllowanceTransfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "AllowanceExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "ExcessiveInvalidation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContractSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signatureDeadline",
        type: "uint256",
      },
    ],
    name: "SignatureExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "Lockdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "newNonce",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "oldNonce",
        type: "uint48",
      },
    ],
    name: "NonceInvalidation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "nonce",
        type: "uint48",
      },
    ],
    name: "Permit",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "nonce",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "newNonce",
        type: "uint48",
      },
    ],
    name: "invalidateNonces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
        ],
        internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
        name: "approvals",
        type: "tuple[]",
      },
    ],
    name: "lockdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint160",
                name: "amount",
                type: "uint160",
              },
              {
                internalType: "uint48",
                name: "expiration",
                type: "uint48",
              },
              {
                internalType: "uint48",
                name: "nonce",
                type: "uint48",
              },
            ],
            internalType: "struct IAllowanceTransfer.PermitDetails[]",
            name: "details",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sigDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct IAllowanceTransfer.PermitBatch",
        name: "permitBatch",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint160",
                name: "amount",
                type: "uint160",
              },
              {
                internalType: "uint48",
                name: "expiration",
                type: "uint48",
              },
              {
                internalType: "uint48",
                name: "nonce",
                type: "uint48",
              },
            ],
            internalType: "struct IAllowanceTransfer.PermitDetails",
            name: "details",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sigDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct IAllowanceTransfer.PermitSingle",
        name: "permitSingle",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint160",
            name: "amount",
            type: "uint160",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
        name: "transferDetails",
        type: "tuple[]",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a5578260405251902060805261139390816100c1823960805181610e1c015260a05181610df60152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630d58b1db1461095e5780632a2d80d1146106995780632b67b570146104e45780633644e515146104c157806336c785161461047957806365d9723c1461031a57806387517c451461021c578063927da1051461019b5763cc53287f1461007f57600080fd5b34610196576020806003193601126101965767ffffffffffffffff906004358281116101965736602382011215610196578060040135928311610196576024810190602436918560061b0101116101965760005b8381106100dc57005b806100f26100ed6001938786610ca4565b610cb4565b61010785610101848988610ca4565b01610cb4565b33600052600086526040600020916001600160a01b0380911692836000528752604060002091169081600052865260406000207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055604051918252858201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a460403392a2016100d3565b600080fd5b34610196576060366003190112610196576101b4610a41565b6101bc610a57565b6101c4610a6d565b6001600160a01b0392831660009081526020818152604080832094861683529381528382209285168252918252829020548251938116845265ffffffffffff60a082901c169184019190915260d01c90820152606090f35b3461019657608036600319011261019657610235610a41565b61023d610a57565b90610246610a6d565b65ffffffffffff91606435838116918282036101965765ffffffffffff60a01b933360005260006020527fffffffffffff00000000000000000000000000000000000000000000000000006040600020966001600160a01b03809416978860005260205283604060002099169889600052602052604060002094861560001461031257504216925b8454921695869360a01b1691161717905560405191825260208201527fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b60403392a4005b9050926102ce565b3461019657606036600319011261019657610333610a41565b61033b610a57565b9060443565ffffffffffff808216918281036101965733600052602090600082526040600020946001600160a01b0380911695866000528352604060002096169586600052825260406000205460d01c92838511156104685761ffff90848303161161043e5733600052600082526040600020856000528252604060002086600052825260406000209079ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffff000000000000000000000000000000000000000000000000000083549260d01b1691161790556040519283528201527f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f360403392a4005b60046040517f24d35a26000000000000000000000000000000000000000000000000000000008152fd5b6004604051633ab3447f60e11b8152fd5b3461019657608036600319011261019657610492610a41565b61049a610a57565b6104a2610a6d565b606435916001600160a01b0383168303610196576104bf93610b74565b005b346101965760003660031901126101965760206104dc610df3565b604051908152f35b3461019657610100366003190112610196576104fe610a41565b36602319019060c0821261019657604051906060820167ffffffffffffffff93838210858311176106835760809082604052126101965761053e81610a97565b6001600160a01b03906024358281168103610196578152604435828116810361019657608085015265ffffffffffff60643581811681036101965760a086015260843590811681036101965760c0850152835260a435928184168403610196576020810193845260c43594604082019086825260e435908111610196576105c9903690600401610b1c565b91909680421161065257506104bf966106489261064287936105eb8751610f11565b90888b511690516040519160208301937ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d085526040840152606083015260808201526080815261063a81610ab3565b519020610eae565b91610fb0565b5192511691610cc8565b602490604051907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b634e487b7160e01b600052604160045260246000fd5b3461019657600319606036820112610196576106b3610a41565b906024359067ffffffffffffffff90818311610196576060908336030112610196576040519160608301838110838211176106835760405280600401358281116101965781013660238201121561019657600481013561071281610af1565b916107206040519384610acf565b8183526024602084019260071b8201019036821161019657602401915b8183106108fc57505050835260449061075860248201610a83565b60208501520135908160408401526044359081116101965761077e903690600401610b1c565b918042116106525750838351519161079583610af1565b926107a36040519485610acf565b808452601f196107b282610af1565b0136602086013760005b8181106108ac575050604051602081019081602086519196019060005b818110610893575050506107f98161085d9603601f198101835282610acf565b519020936106426001600160a01b03958660208901511660408901516040519160208301937faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f7944086385526040840152606083015260808201526080815261063a81610ab3565b602082015116908051519160005b83811061087457005b8061088d83876108876001958851610b4a565b51610cc8565b0161086b565b825188526020978801978b9750909201916001016107d9565b90919392506108c56108bf828851610b4a565b51610f11565b6108cf8285610b4a565b5260001981146108e65760010190869293916107bc565b634e487b7160e01b600052601160045260246000fd5b60808336031261019657602060809160405161091781610a97565b61092086610a83565b815261092d838701610a83565b8382015261093d60408701610b09565b604082015261094e60608701610b09565b606082015281520192019161073d565b34610196576020806003193601126101965767ffffffffffffffff6004358181116101965736602382011215610196578060040135918211610196576024906007368385831b840101116101965760005b8481106109b857005b80821b8301906080602319833603011261019657610a3b6001926040516109de81610a97565b6109e9888301610a83565b80825260606109fa60448501610a83565b92838d820152610a1e6084610a1160648801610a83565b9687604085015201610a83565b91829101526001600160a01b038080809316951693169116610b74565b016109af565b600435906001600160a01b038216820361019657565b602435906001600160a01b038216820361019657565b604435906001600160a01b038216820361019657565b35906001600160a01b038216820361019657565b6080810190811067ffffffffffffffff82111761068357604052565b60a0810190811067ffffffffffffffff82111761068357604052565b90601f8019910116810190811067ffffffffffffffff82111761068357604052565b67ffffffffffffffff81116106835760051b60200190565b359065ffffffffffff8216820361019657565b9181601f840112156101965782359167ffffffffffffffff8311610196576020838186019501011161019657565b8051821015610b5e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90926001600160a01b0380921691600093838552846020526040958287872094169384875260205286862033875260205265ffffffffffff8787205460a01c16804211610c7457508593836020969360649587948b51967f23b872dd00000000000000000000000000000000000000000000000000000000885260048801521660248601521660448401525af19051600114601f3d11163d15171615610c175750565b606490517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fd5b6024908851907fd81b2f2e0000000000000000000000000000000000000000000000000000000082526004820152fd5b9190811015610b5e5760061b0190565b356001600160a01b03811681036101965790565b9065ffffffffffff90816060840151166001600160a01b039081855116948260208201511692808660408094015116951695600091878352826020528383208984526020528383209916988983526020528282209184835460d01c03610de3579185610dcd94927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec98979694508715600014610dd25765ffffffffffff60a01b9042165b60a01b167fffffffffffff00000000000000000000000000000000000000000000000000006001860160d01b161717905551938493849160409194936001600160a01b03606085019616845265ffffffffffff809216602085015216910152565b0390a4565b5065ffffffffffff60a01b87610d6c565b60048451633ab3447f60e11b8152fd5b467f000000000000000000000000000000000000000000000000000000000000000003610e3e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152610ea881610ab3565b51902090565b610eb6610df3565b906040519060208201927f1901000000000000000000000000000000000000000000000000000000000000845260228301526042820152604281526080810181811067ffffffffffffffff8211176106835760405251902090565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b367883526001600160a01b038082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c0810181811067ffffffffffffffff8211176106835760405251902090565b9190826040910312610196576020823592013590565b909290916000823b6111fc57506041840361117457610fd184840184610f9a565b91909460401015610b5e576080600091604060ff96013560f81c935b60409788519283526020978896168684015288830152606082015282805260015afa1561116957600051835184810181811067ffffffffffffffff821117610683578552601081527f797979797979797979797979797979790000000000000000000000000000000084820152845190848201927e7150be0000000000000000000000000000000000000000000000000000000084526001600160a01b038091169485602485015216948560448401526060606484015281519182608485015260005b8381106111555750505091816110e460a4828660008381998299010152601f80199101168101036084810184520182610acf565b51906a636f6e736f6c652e6c6f675afa50801561112c57036111035750565b600490517f815e1d64000000000000000000000000000000000000000000000000000000008152fd5b600483517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b81810183015185820160a4015282016110b0565b82513d6000823e3d90fd5b916040849294146000146111d25761118e91810190610f9a565b929092601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169160ff1c019260ff84116108e657608060009160ff9593610fed565b60046040517f4be6321b000000000000000000000000000000000000000000000000000000008152fd5b92938092602092956001600160a01b0360646040518097819682957f1626ba7e000000000000000000000000000000000000000000000000000000009c8d85526004850152604060248501528160448501528484013781810183018a9052601f01601f19168101030192165afa9081156113525782916112cd575b507fffffffff00000000000000000000000000000000000000000000000000000000915016036112a357565b60046040517fb0669cbc000000000000000000000000000000000000000000000000000000008152fd5b90506020813d821161134a575b816112e760209383610acf565b810103126113465751907fffffffff000000000000000000000000000000000000000000000000000000008216820361134357507fffffffff000000000000000000000000000000000000000000000000000000009038611277565b80fd5b5080fd5b3d91506112da565b6040513d84823e3d90fdfea26469706673582212202ceddbcb3487a45c512049e3650ee651c5714241776bff31165930b28407e32464736f6c63430008110033";

type AllowanceTransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowanceTransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllowanceTransfer__factory extends ContractFactory {
  constructor(...args: AllowanceTransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AllowanceTransfer> {
    return super.deploy(overrides || {}) as Promise<AllowanceTransfer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AllowanceTransfer {
    return super.attach(address) as AllowanceTransfer;
  }
  override connect(signer: Signer): AllowanceTransfer__factory {
    return super.connect(signer) as AllowanceTransfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowanceTransferInterface {
    return new utils.Interface(_abi) as AllowanceTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllowanceTransfer {
    return new Contract(address, _abi, signerOrProvider) as AllowanceTransfer;
  }
}
