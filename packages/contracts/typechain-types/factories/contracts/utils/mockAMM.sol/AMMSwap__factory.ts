/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AMMSwap,
  AMMSwapInterface,
} from "../../../../contracts/utils/mockAMM.sol/AMMSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outputToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "inputToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outputToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461008d57601f61048f38819003918201601f19168301916001600160401b0383118484101761009257808492604094855283398101031261008d57610052602061004b836100a8565b92016100a8565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556040516103d290816100bd8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361008d5756fe60806040908082526004918236101561001757600080fd5b600091823560e01c90816301b60ef21461030c5750806301e33667146101f95780638da5cb5b146101d4578063c1d8d1d9146101ad5763d3986f081461005c57600080fd5b346101a957806003193601126101a95781908335610078610331565b6001600160a01b0380600154168451907f23b872dd0000000000000000000000000000000000000000000000000000000082523389830152306024830152846044830152816064816020998a945af1801561019f57610182575b5060038302928084046003149015171561016f5791868592876101259695600254169286519788958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03925af19081156101665750610139578280f35b8161015892903d1061015f575b610150818361034c565b810190610384565b5081808280f35b503d610146565b513d85823e3d90fd5b602486601189634e487b7160e01b835252fd5b61019890863d881161015f57610150818361034c565b50386100d2565b85513d89823e3d90fd5b5080fd5b50346101a957816003193601126101a9576020906001600160a01b03600254169051908152f35b50346101a957816003193601126101a9576001600160a01b0360209254169051908152f35b5082346103085760603660031901126103085780356001600160a01b0380821680920361030457610228610331565b9085541633036102a7579160209184938661026f965180978195829463a9059cbb60e01b8452604435918401602090939291936001600160a01b0360408201951681520152565b03925af190811561029e5750610283575080f35b61029a9060203d811161015f57610150818361034c565b5080f35b513d84823e3d90fd5b60648360208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4f6e6c79206f776e65722063616e2077697468647261770000000000000000006044820152fd5b8480fd5b8280fd5b8390346101a957816003193601126101a9576020906001600160a01b03600154168152f35b602435906001600160a01b038216820361034757565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761036e57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261034757518015158103610347579056fea2646970667358221220735fb970190d31f7e815c2c7287b67e0ed4099896da5fda8abd0819484724ea764736f6c63430008110033";

type AMMSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AMMSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AMMSwap__factory extends ContractFactory {
  constructor(...args: AMMSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _inputToken: PromiseOrValue<string>,
    _outputToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AMMSwap> {
    return super.deploy(
      _inputToken,
      _outputToken,
      overrides || {}
    ) as Promise<AMMSwap>;
  }
  override getDeployTransaction(
    _inputToken: PromiseOrValue<string>,
    _outputToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _inputToken,
      _outputToken,
      overrides || {}
    );
  }
  override attach(address: string): AMMSwap {
    return super.attach(address) as AMMSwap;
  }
  override connect(signer: Signer): AMMSwap__factory {
    return super.connect(signer) as AMMSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMSwapInterface {
    return new utils.Interface(_abi) as AMMSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AMMSwap {
    return new Contract(address, _abi, signerOrProvider) as AMMSwap;
  }
}
