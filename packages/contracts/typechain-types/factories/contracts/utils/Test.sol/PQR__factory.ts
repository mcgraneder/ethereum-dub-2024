/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PQR,
  PQRInterface,
} from "../../../../contracts/utils/Test.sol/PQR";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200039957620000146200039e565b6200001e6200039e565b81519091906001600160401b039081811162000299576003918254926001928385811c95169586156200038e575b6020968787101462000378578190601f9687811162000322575b508790878311600114620002bb57600092620002af575b505060001982841b1c191690841b1781555b8551918211620002995760049586548481811c911680156200028e575b8782101462000279578581116200022e575b508590858411600114620001c357938394918492600095620001b7575b50501b92600019911b1c19161783555b33156200017657506002546b033b2e3c9fd0803ce8000000928382018092116200016157506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91600255338352828152604083208481540190556040519384523393a3604051610ae69081620003cf8239f35b601190634e487b7160e01b6000525260246000fd5b606492916040519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b015193503880620000db565b9190601f198416928860005284886000209460005b8a89838310620002165750505010620001fb575b50505050811b018355620000eb565b01519060f884600019921b161c1916905538808080620001ec565b868601518955909701969485019488935001620001d8565b87600052866000208680860160051c8201928987106200026f575b0160051c019085905b82811062000262575050620000be565b6000815501859062000252565b9250819262000249565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000ac565b634e487b7160e01b600052604160045260246000fd5b0151905038806200007d565b90869350601f1983169185600052896000209260005b8b8282106200030b5750508411620002f2575b505050811b0181556200008f565b015160001983861b60f8161c19169055388080620002e4565b8385015186558a97909501949384019301620002d1565b90915083600052876000208780850160051c8201928a86106200036e575b918891869594930160051c01915b8281106200035e57505062000066565b600081558594508891016200034e565b9250819262000340565b634e487b7160e01b600052602260045260246000fd5b94607f16946200004c565b600080fd5b60408051919082016001600160401b03811183821017620002995760405260038252622828a960e91b602083015256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461049e57508163095ea7b31461047457816318160ddd1461045557816323b872dd14610418578163313ce567146103fc578163395093511461039657816342966c681461037857816370a082311461034257816379cc67901461030f57816395d89b41146101f0578163a457c2d71461012f57508063a9059cbb146100ff5763dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d06105c3565b6100d86105de565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100fb57806003193601126100fb5760209061012861011e6105c3565b60243590336105f4565b5160018152f35b905082346101ed57826003193601126101ed5761014a6105c3565b91836024359233815260016020528181206001600160a01b03861682526020522054908282106101845760208561012885850387336107a8565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b8383346100fb57816003193601126100fb57805190828454600181811c90808316928315610305575b60209384841081146102f2578388529081156102d65750600114610281575b505050829003601f01601f191682019267ffffffffffffffff84118385101761026e575082918261026a92528261057a565b0390f35b80604186634e487b7160e01b6024945252fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102c25750505050830101858080610238565b8054888601830152930192849082016102ac565b60ff1916878501525050151560051b8401019050858080610238565b60248960228c634e487b7160e01b835252fd5b91607f1691610219565b5050346100fb573660031901126101ed5761033f61032b6105c3565b6024359061033a8233836108dc565b610974565b80f35b5050346100fb5760203660031901126100fb57806020926001600160a01b036103696105c3565b16815280845220549051908152f35b8390346100fb5760203660031901126100fb5761033f903533610974565b8284346101ed57816003193601126101ed576103b06105c3565b33825260016020528282206001600160a01b0382168352602052828220549160243583018093116103e9576020846101288585336107a8565b80601186634e487b7160e01b6024945252fd5b5050346100fb57816003193601126100fb576020905160128152f35b5050346100fb5760603660031901126100fb576020906101286104396105c3565b6104416105de565b604435916104508333836108dc565b6105f4565b5050346100fb57816003193601126100fb576020906002549051908152f35b5050346100fb57806003193601126100fb576020906101286104946105c3565b60243590336107a8565b8490843461057657826003193601126105765782600354600181811c9080831692831561056c575b60209384841081146102f2578388529081156102d6575060011461051657505050829003601f01601f191682019267ffffffffffffffff84118385101761026e575082918261026a92528261057a565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106105585750505050830101858080610238565b805488860183015293019284908201610542565b91607f16916104c6565b8280fd5b6020808252825181830181905290939260005b8281106105af57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161058d565b600435906001600160a01b03821682036105d957565b600080fd5b602435906001600160a01b03821682036105d957565b6001600160a01b0380911691821561073e57169182156106d45760008281528060205260408120549180831061066a57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b0380911691821561087357169182156108095760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b906001600160a01b0380831660005260016020526040600020908216600052602052604060002054926000198403610915575b50505050565b808410610930576109279303916107a8565b3880808061090f565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b6001600160a01b03168015610a46576000918183528260205260408320548181106109dc57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220c91071665e36bcc087b8adc6a3ddac9280e2426682bbb254339bd7cb24ae2d2e64736f6c63430008110033";

type PQRConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PQRConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PQR__factory extends ContractFactory {
  constructor(...args: PQRConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PQR> {
    return super.deploy(overrides || {}) as Promise<PQR>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PQR {
    return super.attach(address) as PQR;
  }
  override connect(signer: Signer): PQR__factory {
    return super.connect(signer) as PQR__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PQRInterface {
    return new utils.Interface(_abi) as PQRInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PQR {
    return new Contract(address, _abi, signerOrProvider) as PQR;
  }
}
