/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Schnorr2,
  Schnorr2Interface,
} from "../../../../contracts/crypto/Schnorr.sol/Schnorr2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "message",
        type: "uint256",
      },
    ],
    name: "CreateProof",
    outputs: [
      {
        internalType: "uint256",
        name: "pubkeyX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubkeyY",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "out_e",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "out_s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret_key",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "PrivDerive",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "PubDerive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "my_secret",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "their_public",
        type: "uint256[2]",
      },
    ],
    name: "SharedSecret",
    outputs: [
      {
        internalType: "uint256",
        name: "xPX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xPY",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "message",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "e",
        type: "uint256",
      },
    ],
    name: "VerifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
    ],
    name: "deriveAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msghash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "priv",
        type: "bytes32",
      },
    ],
    name: "deterministicGenerateK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    name: "generatePublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "hmacSha256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Secp256k1.Point",
        name: "publicKey",
        type: "tuple",
      },
    ],
    name: "publicKeyToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msghash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "recover",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Secp256k1.Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msghash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "privkey",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611a3d908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816307be79251461085557816312def0a6146107f75781633dd4b683146107db5781637ef42d7b146106cf57816386f57635146105ab578163934b8ac9146102f157816395e80631146102945781639870e2a414610267578163a750172314610232578163cb5ea5d114610210578163d66c90fe1461017c578163e03d92d3146100d7575063e113acc8146100b257600080fd5b346100d3576020906100c3366109c7565b9151916401000003d01991088152f35b5080fd5b9050346101785781600319360112610178576024359067ffffffffffffffff808311610174573660238401121561017457828201359081116101615783519261012a601f8301601f191660200185610a4c565b818452366024838301011161015d5794602082610156959493602483990183870137840101523561188a565b9051908152f35b8580fd5b602485604184634e487b7160e01b835252fd5b8480fd5b8280fd5b9050823461020d57606036600319011261020d57366043121561020d578251906101a5826109e2565b8160649136831161020d57506024905b8282106101fd57856101dc6101d3878760208151910151913561114f565b9290919261140a565b906401000003d0198281818195099082828851970986520990096020820152f35b81358152602091820191016101b5565b80fd5b9050823461020d57602036600319011261020d57506101d36101dc91356110a5565b82843461020d57606036600319011261020d575061025b61025236610a6e565b60443590610aaf565b82519182526020820152f35b5050346100d357816003193601126100d3576020905170014551231950b75fc4402da1732fc9bebe198152f35b5050346100d357806003193601126100d35760209073ffffffffffffffffffffffffffffffffffffffff6102c736610a6e565b838151910151835190858201928352848201528381526102e681610a30565b519020169051908152f35b839150346100d35760803660031901126100d35760249182359060ff8216820361020d57845192604435610324856109e2565b82855282602080960152801560011715610599576401000003d0199361035685600781878180888009880908086114b0565b90600180831691161461057d575b875161036f816109e2565b7f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817988152868101907f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b882528951916103c5836109e2565b84835288830193845270014551231950b75fc4402da1732fc9bebe199188873506830392831161056b5793610435959361040d6104289461041e94610430985190519161114f565b94919390925190519060643561114f565b9491929093610c30565b9390926112d3565b6111b5565b90939196885197610445896109e2565b885286880194855282878a5161045a816109e2565b8281520152811515868382610560575b505080610558575b1561051757859383919060019086855b6104b95750505050505081808280098097510995099051098184516104a6816109e2565b8481520190815283519283525190820152f35b9091929496506104cc8782979597611085565b93898486098a03908a8211610505578a6104f593926104ef9208949880966112c0565b90610c23565b9384938997969493929193610482565b8688601186634e487b7160e01b835252fd5b83600e606492898c519362461bcd60e51b85528401528201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b506001610472565b14159050868b61046a565b8a88601189634e487b7160e01b835252fd5b840384811115610364578684601185634e487b7160e01b835252fd5b8583601184634e487b7160e01b835252fd5b82843461020d576001916105e5916105c2366109c7565b909160ff6105d08385611562565b936105da856110a5565b99919998909861140a565b916401000003d01995869161062361060584808880099e8f90099a6112d3565b9170014551231950b75fc4402da1732fc9bebe1980948c09906114a3565b900998817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffe179b8c8c106000146106c85786885b1695099009161816601b019560ff87116106b5578511610689575b50506060945060ff8251941684526020840152820152f35b90919382039182116106a2575060609450918580610671565b80601187634e487b7160e01b6024945252fd5b60248260118a634e487b7160e01b835252fd5b8685610656565b82843461020d5760a036600319011261020d576106eb36610a6e565b90608435916401000003d0198061071261070882606435066110a5565b939192909361140a565b92818480099061073a87519861072f60208a019a8b51908d61114f565b99919993909361140a565b92818085800980950990098503908582116107c8575060209c509284610779969381838180966107bd9d9a6107af9f9d9a069a09970990099209610b51565b9390915194519487519485938a8501976044359389939160a0959391855260208501526040840152606083015260808201520190565b03601f198101835282610a4c565b519020149051908152f35b8060118f634e487b7160e01b6024945252fd5b5050346100d3576020906101566107f1366109c7565b90611562565b82843461020d578160031936011261020d575073ffffffffffffffffffffffffffffffffffffffff6020928383519161082f836109e2565b35918281526024359182910152835190858201928352848201528381526102e681610a30565b905034610178579170014551231950b75fc4402da1732fc9bebe1961091392610976608095610883366109c7565b6401000003d0959195199788938480806108ab6108a1828d066110a5565b949192909461140a565b9e8f80098092099d0990099885885160208101908682528b8b8201528a81526108d381610a30565b519020069091818d1c806109bb575b5081891c806109ac575b508160201c806109a0575b50508060101c80610993575b5060081c61098b575b42906112c0565b9261096b6109336107af6109288488066110a5565b96919693909361140a565b958d8d878d818b80099051998a98818360208c019e0990099409918952602089015260408801526060870152608086015260a0850190565b5190208095096114a3565b92815194855260208501528301526060820152f35b60010161090c565b6002915091019038610903565b920191905038806108f7565b600891939250910191386108ec565b601093509150386108e2565b60409060031901126109dd576004359060243590565b600080fd5b6040810190811067ffffffffffffffff8211176109fe57604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176109fe57604052565b6060810190811067ffffffffffffffff8211176109fe57604052565b90601f8019910116810190811067ffffffffffffffff8211176109fe57604052565b80602312156109dd5760405190610a84826109e2565b8160449182116109dd576004905b828210610a9f5750505090565b8135815260209182019101610a92565b9190610af3610ac0610acb9261121b565b95919593909361140a565b926401000003d019908180808780098099099788960990099481602087935191015190610b51565b90828114908180610b48575b610b3f57508080610b35575b610b2e571580610b25575b610b1f57509190565b90509190565b50838114610b16565b5092509190565b5084821415610b0b565b92505092509190565b50858314610aff565b92939291808303610c0d57506401000003d01980948208610b785750509050600090600090565b8381800993806000818080808a890960040996800960030908818480088203828111610bf757829081838009089586830390838211610bf7578381819209600809830391838311610bf75783809281806001610bde99096002099708900908939161140a565b926401000003d019809281808780098092099509900990565b634e487b7160e01b600052601160045260246000fd5b610bde9491610c1b93610e05565b90939061140a565b91908203918211610bf757565b909295939194811580610dfd575b610df357861580610deb575b610de157604092835194610c5d86610a14565b60803687376401000003d0199586898009928382528760208301948b0984528780808088800995818b87019a888c528160608901998c0989528c519b610ca28d610a14565b51900996878b525190099c8d9460208a019e8f5251900991888801958387525190099060608701938285521491821592610dd6575b505015610d9357845191610cea83610a14565b60803684375184518703878111610bf75787910882525188518603868111610bf7578691089360208201948086528683518181800993850193808552099160608401928084528803888111610bf75788808851845190096002098903898111610bf757898094928184819509080896519551905190099885870391878311610bf75787915190519009860390868211610bf757869485809492819351989c089009089509900990565b6064855162461bcd60e51b815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b141590503880610cd7565b5091945050929190565b508215610c4a565b9194509092915050565b508315610c3e565b9391841580610fbe575b610fb557801580610fad575b610fa5576040805195610e2d87610a14565b6080368837600187526020870192600184528288019660018852606089019260018452845198610e5c8a610a14565b6401000003d0198098818094819451900996878d525190099360208b019b858d5251900991858a01968388525190099060608901938285521491821592610f9a575b505015610f5757815192610eb184610a14565b60803685375186518503858111610bf75785910883525186518403848111610bf7578491089460208301958087528484518181800994860194808652099260608501938085528603868111610bf75786808551845190096002098703878111610bf757878094928184819509080897519251905190099686850392858411610bf75785915190519009840392848411610bf7578492836001819351099798089009089190565b6064825162461bcd60e51b815260206004820152601e60248201527f557365206a6163446f75626c652066756e6374696f6e20696e737465616400006044820152fd5b141590503880610e9e565b509150600190565b508315610e1b565b93506001919050565b508115610e0f565b9290918015611082576401000003d01990818480098282800990838080838a09600409978180808060009780098709928009600309089084888008850385811161106e57859081848009088086039186831161105a5786818192096008098603938685116110465750859493919285809481939b08900908940960020990565b80634e487b7160e01b602492526011600452fd5b602485634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526011600452fd5b90565b811561108f570490565b634e487b7160e01b600052601260045260246000fd5b7f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798917f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8600192801561114a576000948592918590805b6111085750505050929190565b6001811661112c575b906111219160011c938493610fc6565b9093919290916110fb565b9390838382986111219a61113f95610c30565b909750959093611111565b509190565b91929092600192801561114a576000948592918590805b6111735750505050929190565b60018116611197575b9061118c9160011c938493610fc6565b909391929091611166565b93908383829861118c9a6111aa95610c30565b90975095909361117c565b93919093801561114a57929060009182956001918683975b6111db575050505050929190565b8381166111fd575b906111f291841c948593610fc6565b9094919290916111cd565b9490848382996111f29b61121095610c30565b9098509690946111e3565b7f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798917f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8600192801561114a576000948592918590805b61127e5750505050929190565b600181166112a2575b906112979160011c938493610fc6565b909391929091611271565b9390838382986112979a6112b595610c30565b909750959093611287565b81810292918115918404141715610bf757565b801515806113ee575b806113e6575b156113a25760009081600170014551231950b75fc4402da1732fc9bebe19835b61130d575050505090565b61131b848296949596611085565b9270014551231950b75fc4402da1732fc9bebe1983850970014551231950b75fc4402da1732fc9bebe19039070014551231950b75fc4402da1732fc9bebe19821161138e5770014551231950b75fc4402da1732fc9bebe1961138693926104ef9208939680956112c0565b929183611302565b602486634e487b7160e01b81526011600452fd5b606460405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964206e756d6265720000000000000000000000000000000000006044820152fd5b5060016112e2565b5070014551231950b75fc4402da1732fc9bebe198114156112dc565b80151580611493575b8061148b575b156113a2576000908160016401000003d019835b611438575050505090565b61144784829693949596611085565b916401000003d0198484096401000003d019036401000003d019811161138e5761148292916104ef916401000003d0199108949680946112c0565b9291908361142d565b506001611419565b506401000003d019811415611413565b91908201809211610bf757565b801561155c57600190817f800000000000000000000000000000000000000000000000000000000000000091825b6114e85750505090565b9091926401000003d01990818080807f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffff0c94818a87161515890a918009098189891c86161515880a91800909818860021c85161515870a91800909918660031c161515840a918009099260041c9190826114de565b50600090565b91909160409081517f01010101010101010101010101010101010101010101010101010101010101016020918183820152600080868301528760418301528460618301526061825260a0820167ffffffffffffffff928082108483111761181557828691838a526115d284610a30565b898452893660c0830137815b8381106117f957508951906115f282610a30565b8a82528a3685840137825b8b81106117bf57508a80519561161287610a30565b818752813687890137845b82811061177b575050611653926107af6116429361164893519485938985019061185f565b9061185f565b8a519182809261185f565b039060025afa1561176f578161169461167b61168988809585518d519485928484019061185f565b908152038084520182610a4c565b89519182809261185f565b039060025afa15611764576116be815193875190868201528581526116b8816109e2565b8461188a565b9486519886868b01527f0100000000000000000000000000000000000000000000000000000000000000888b015260418a015260618901526061885260a088019188831090831117611750575061108295966117399261171f92875261188a565b9284519083820152828152611733816109e2565b8361188a565b92519281840152825261174b826109e2565b61188a565b80634e487b7160e01b602492526041600452fd5b8551903d90823e3d90fd5b508551903d90823e3d90fd5b91509294506117b3919350601760fa1b6001600160f81b031961179e8386611838565b511618871a6117ad8288611838565b53611829565b918a899492879461161d565b9092506117ef919350601b60f91b6001600160f81b03196117e08388611838565b511618861a6117ad8286611838565b91849188936115fd565b90925061180c91811a6117ad8286611838565b869184916115de565b602483634e487b7160e01b81526041600452fd5b6000198114610bf75760010190565b908151811015611849570160200190565b634e487b7160e01b600052603260045260246000fd5b9081519160005b838110611877575050016000815290565b8060208092840101518185015201611866565b9060409182519061189a82610a30565b838252602092839185368486013760005b8381106119ea5750508451906118c082610a30565b85825285368484013760005b8681106119b257508551936118e085610a30565b86855286368587013760005b8781106119785750506116426119136000936107af61191e948a519485938985019061185f565b86519182809261185f565b039060025afa1561196d5761195161167b61194684600094855188519485928484019061185f565b84519182809261185f565b039060025afa15611963575060005190565b513d6000823e3d90fd5b82513d6000823e3d90fd5b8192939450601760fa1b6001600160f81b0319611998836119a895611838565b51161860001a6117ad8288611838565b90859392916118ec565b6119e191929350601b60f91b6001600160f81b03196119d18388611838565b51161860001a6117ad8286611838565b908492916118cc565b816119fe92939450811a6117ad8287611838565b908492916118ab56fea2646970667358221220cbf17dab72ad5edc8bc91732da46ebdecd4e12541b76b406cc19dbd2e6d662e364736f6c63430008110033";

type Schnorr2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Schnorr2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Schnorr2__factory extends ContractFactory {
  constructor(...args: Schnorr2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Schnorr2> {
    return super.deploy(overrides || {}) as Promise<Schnorr2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Schnorr2 {
    return super.attach(address) as Schnorr2;
  }
  override connect(signer: Signer): Schnorr2__factory {
    return super.connect(signer) as Schnorr2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Schnorr2Interface {
    return new utils.Interface(_abi) as Schnorr2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Schnorr2 {
    return new Contract(address, _abi, signerOrProvider) as Schnorr2;
  }
}
