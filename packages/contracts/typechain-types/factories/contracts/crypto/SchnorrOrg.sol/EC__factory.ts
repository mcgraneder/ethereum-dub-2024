/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EC,
  ECInterface,
} from "../../../../contracts/crypto/SchnorrOrg.sol/EC";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    name: "_ecAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
    ],
    name: "_ecDouble",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
    ],
    name: "_ecMul",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    name: "_ecSub",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "_inverse",
    outputs: [
      {
        internalType: "uint256",
        name: "invVal",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    name: "_jAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    name: "_jDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    name: "_jMul",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z2",
        type: "uint256",
      },
    ],
    name: "_jSub",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "b",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubY",
        type: "uint256",
      },
    ],
    name: "deriveKey",
    outputs: [
      {
        internalType: "uint256",
        name: "qx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "qy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "ecInv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y2",
        type: "uint256",
      },
    ],
    name: "ecSub",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    name: "ecadd",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256",
      },
    ],
    name: "ecmul",
    outputs: [
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "qx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "qy",
        type: "uint256",
      },
    ],
    name: "ecmulVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    name: "g1add",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    name: "g1sub",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "gx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_aa",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bb",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pp",
        type: "uint256",
      },
    ],
    name: "isOnCurve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "n",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "p",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privKey",
        type: "uint256",
      },
    ],
    name: "publicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "qx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "qy",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "publicKeyVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610d40908161001c8239f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c9081630138e31b1461064957508063022079d9146105d957806306c91ce31461059f5780630dbe671f146105855780630e5d10c9146105645780631ecfe64d1461053b5780632d58c9a2146105015780632e52d606146104e157806337103a67146104ba5780634df7e3d01461049f5780635b764811146104745780635f972df81461044a5780636390f97d1461042957806366ce10b7146103a75780638081a1e7146103885780638940aebe146103665780638a9a7ab51461033b5780638cecf66e14610314578063913f424c146102f55780639ae8886a146102c9578063b145cbe314610268578063bb8c256a14610248578063db31883314610226578063e241c1d9146101e6578063ee7f22a5146101825763f47289e11461014057600080fd5b3461017e5761017a9061015e610155366106c0565b91828282610949565b9251918252602082015260408101919091529081906060820190565b0390f35b5080fd5b5090346101e357506101ca60016101d261019b3661067b565b856401000003d09794929719809781930993099085600181816101c0858c888a61075c565b509a09920961075c565b91909161077f565b908282865195098452096020820152f35b80fd5b5090346101e3575061020c6102036101fd366106c0565b91610a52565b9290919261077f565b80918451936401000003d019938491098452096020820152f35b503461017e5761017a9061015e61023c366106da565b94939093929192610949565b5090346101e3575061020c61020361025f3661067b565b92919091610836565b5090346101e357506102ad61017a61027f366106da565b8381926401000003d09997949919938480938193099709946102a3858b888a61075c565b509909920961075c565b9351928352602083015260408201929092529081906060820190565b503461017e578160031936011261017e576020905170014551231950b75fc4402da1732fc9bebe198152f35b503461017e5761017a9061015e61030b3661067b565b92919091610be5565b503461017e57602036600319011261017e5760209061033460043561077f565b9051908152f35b5090346101e3575061020c61020361035e6103553661067b565b90939193610c5f565b929091610836565b5090346101e35760203660031901126101e3575061020c610203600435610acc565b5090346101e3575061020c61020361039f366106c0565b919091610b79565b503461017e5760208260806103bb366106c0565b505070014551231950b75fc4402da1732fc9bebe19855191848352601b868401527f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179890818885015209606082015282805260015afa1561041f576020905160018152f35b51903d90823e3d90fd5b5090346101e3575061043d61025f3661067b565b5082519182526020820152f35b5090346101e3575061045b3661067b565b8451936401000003d01993918491098452096020820152f35b5090346101e357506104853661067b565b8451936401000003d0199391928491098452096020820152f35b503461017e578160031936011261017e576020905160078152f35b503461017e576020906104d86104cf3661069e565b93929092610c78565b90519015158152f35b503461017e578160031936011261017e57516401000003d0198152602090f35b503461017e578160031936011261017e57602090517f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b88152f35b5090346101e3575061055861054f3661067b565b9291909161075c565b82519182526020820152f35b5090346101e357816003193601126101e35750610558602435600435610c5f565b503461017e578160031936011261017e5751908152602090f35b503461017e578160031936011261017e57602090517f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817988152f35b503461017e576020826080600170014551231950b75fc4402da1732fc9bebe196106023661069e565b50509316151560001461064157601c925b60ff8851948786521687850152818885015209606082015282805260015afa1561041f576020905160018152f35b601b92610613565b905082346101e3575061065b3661067b565b91929083916401000003d019808096819409918509088452096020820152f35b60809060031901126106995760043590602435906044359060643590565b600080fd5b60a0906003190112610699576004359060243590604435906064359060843590565b606090600319011261069957600435906024359060443590565b60c090600319011261069957600435906024359060443590606435906084359060a43590565b6401000003d019918203919081831161072157818060018095099184090891565b634e487b7160e01b600052601160045260246000fd5b6401000003d01992830392918284116107215782818160018194099509916001090891565b6401000003d0199283039391908385116107215783828185819509960992090891565b6000908160016401000003d019835b610799575050505090565b83819593949504918094610820576401000003d0199083096401000003d01903926401000003d0198411610721576000936401000003d01991089394809281810291818304149015171561080c5781039081116107f85792908361078e565b602483634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526011600452fd5b634e487b7160e01b600052601260045260246000fd5b93919092841580610941575b6109375781158061092f575b61092857838286148061091f575b1561090057505060016401000003d019916108ac83600081806003818c8009098609088394600288095b6401000003d01980968193099409916108a6888685800987878009610737565b90610737565b9590928397848603918683116107215786809281806001816108da9a8f82908409099709918c090809610737565b9095909190868684146108f65750508483838193099609930990565b9593509550505090565b61090991610700565b90916108ac6109188783610700565b9490610886565b5081811461085c565b5050600190565b50801561084e565b9093509150600190565b508315610842565b959392909192861580610a4a575b610a4057811580610a38575b610a2e5781871480610a25575b156109f957506401000003d019926001926108da926109dd868a81806003818080808e818e8009099d8e099c60000994800909600109089887600186099760028509995b6401000003d0199a8b809a8193099809926109d7868d8b8780098c8c800961075c565b9061075c565b989095816109ee8b8988819f61075c565b94909409920961075c565b92610a0b8184886108da95999761075c565b9390966109dd610a1d848b898561075c565b9790996109b4565b50808314610970565b5090935090919050565b508015610963565b9550915050929190565b508215610957565b8091926001906000948594839415610abf5780939192935b610a775750505050909192565b60018116610a9f575b90610a939160011c938382828796610949565b90939192909190610a6a565b959083838296610a9398610ab295610949565b9196909550909390610a80565b5050509293915050829190565b807f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798917f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b86001906000948594839415610abf5780939192935b610b325750505050909192565b60018116610b59575b90610b4e9160011c938382828796610949565b909391929091610b25565b959083838296610b4e98610b6c95610949565b9196909550909390610b3b565b8091926001906000948594839415610abf5780939192935b610b9e5750505050909192565b60018116610bc5575b90610bba9160011c938382828796610949565b909391929091610b91565b959083838296610bba98610bd895610949565b9196909550909390610ba7565b909192819293600094859460019415610c525780939192935b610c0b5750505050909192565b60018116610c32575b90610c279160011c938382828796610949565b909391929091610bfe565b959083838296610c2798610c4595610949565b9196909550909390610c14565b5094958695509293505050565b6401000003d01991820392919081841161072157920690565b939290919380158015610d00575b8015610cf8575b8015610cee575b610ce4578315908161082057848181818009099580610cd0575b505081610cbe575b505080091490565b93919361082057829108913880610cb6565b859250829060009792099008933880610cae565b5050505050600090565b5083831015610c94565b508215610c8d565b5083811015610c8656fea26469706673582212208d947d19f8a958702fc2da4c42ca45be656f5efcead9ce8ffa8695b88a07e23564736f6c63430008110033";

type ECConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EC__factory extends ContractFactory {
  constructor(...args: ECConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EC> {
    return super.deploy(overrides || {}) as Promise<EC>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EC {
    return super.attach(address) as EC;
  }
  override connect(signer: Signer): EC__factory {
    return super.connect(signer) as EC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECInterface {
    return new utils.Interface(_abi) as ECInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EC {
    return new Contract(address, _abi, signerOrProvider) as EC;
  }
}
