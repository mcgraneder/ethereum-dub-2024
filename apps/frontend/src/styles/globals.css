@tailwind base;
@tailwind components;
@tailwind utilities;

* {
      font-family: 'Inter', sans-serif;
      box-sizing: border-box;
    }
  
    /**
        Explicitly load Inter var from public/ so it does not block LCP's critical path.
      */
    @font-face {
      font-family: 'Inter custom';
      font-weight: 100 900;
      font-style: normal;
      font-display: block;
      font-named-instance: 'Regular';
      src: url(/fonts/Inter-roman.var.woff2) format('woff2 supports variations(gvar)'),
        url(/fonts/Inter-roman.var.woff2) format('woff2-variations'),
        url(/fonts/Inter-roman.var.woff2) format('woff2');
    }
  
    @supports (font-variation-settings: normal) {
      * {
        font-family: 'Inter custom', sans-serif;
      }
    }
  
    html,
    body {
      margin: 0;
      padding: 0;
    }
  
    button {
      user-select: none;
    }
  
    html {
      font-size: 16px;
      font-variant: none;
      font-smooth: always;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }
  
    /* Use this to apply network-specific gradient backgrounds, in RadialGradientByChainUpdater.ts */
    #background-radial-gradient {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      pointer-events: none;
      width: 200vw;
      height: 200vh;
      transform: translate(-50vw, -100vh);
      z-index: -1;
    }
  
    html,
    body,
    #root {
      min-height: 100%;
    }
  
    @media (prefers-color-scheme: light) {
      html {
        /* background-color: black; */
        /* linear-gradient(180deg, #1b3269 0%, rgb(7, 8, 22) 100%); */
         background: rgb(19, 22, 38); 
        
          /* background: radial-gradient(72.04% 72.04% at 50% 3.99%, #ff37eb 0%, rgba(166, 151, 255, 0) 100%) */
      }
    }
  
    /* @media (prefers-color-scheme: light) {
      html {
        background: radial-gradient(100% 100% at 50% 0%, rgba(255, 184, 226, 0.51) 0%, rgba(255, 255, 255, 0) 100%), #FFFFFF
      }
    } */
  input[type="radio"]+label span {
    transition: background .2s,
      transform .2s;
  }
  
  input[type="radio"]+label span:hover,
  input[type="radio"]+label:hover span {
    transform: scale(1.1);
  }
  
  input[type="radio"]:checked+label span {
    background-color: #3490DC; 
    box-shadow: 0px 0px 0px 1px white inset;
  }
  
  input[type="radio"]:checked+label {
    color: #3490DC;
    font-weight: bold; 
  }
  
  .loader {
    position: absolute;
    top: 58vh;
    left: 50vw;
    transform: translate(-50%, -50%);
  }
  
  .lds-ellipsis {
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
  }
  
  .lds-ellipsis div {
    background-color: #8eb0e2;
    position: absolute;
    top: 33px;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
  }
  
  .lds-ellipsis div:nth-child(1) {
    left: 8px;
    animation: lds-ellipsis1 0.6s infinite;
  }
  
  .lds-ellipsis div:nth-child(2) {
    left: 8px;
    animation: lds-ellipsis2 0.6s infinite;
  }
  
  .lds-ellipsis div:nth-child(3) {
    left: 32px;
    animation: lds-ellipsis2 0.6s infinite;
  }
  
  .lds-ellipsis div:nth-child(4) {
    left: 56px;
    animation: lds-ellipsis3 0.6s infinite;
  }
  
  .lds-ellipsis div:nth-child(5) {
    left: 56px;
    animation: lds-ellipsis3 0.6s infinite;
  }
  
  @keyframes lds-ellipsis1 {
    0% {
      transform: scale(0);
    }
  
    100% {
      transform: scale(1);
    }
  }
  
  @keyframes lds-ellipsis3 {
    0% {
      transform: scale(1);
    }
  
    100% {
      transform: scale(0);
    }
  }
  
  @keyframes lds-ellipsis2 {
    0% {
      transform: translate(0, 0);
    }
  
    100% {
      transform: translate(24px, 0);
    }
  }